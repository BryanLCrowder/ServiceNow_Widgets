{
    "instance": {
        "name": "asolutionscorpdemo3",
        "url": "https://asolutionscorpdemo3.service-now.com",
        "g_ck": "2bce7683db6de5107758240a1396197d35b2be7ce2ef24c2156d4b07e3e4f096c844db81"
    },
    "action": "saveWidget",
    "tableName": "sp_widget",
    "name": "TAP Class List",
    "sys_id": "855ac84b1be5a5101ddefc851a4bcb88",
    "widget": {
        "template": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Body HTML template",
            "sys_readonly": false,
            "type": "html_template",
            "mandatory": false,
            "displayValue": "<div class=\"panel panel-default\">\r\n    <div class=\"panel-body\">\r\n        <form name=\"outerForm\" class=\"tab-form-demo\">\r\n            <uib-tabset active=\"activeForm\">\r\n                <uib-tab index=\"0\" heading=\"Active\" select=\"changeFilter('active');\">\r\n                </uib-tab>\r\n                <uib-tab index=\"1\" heading=\"Completed\" select=\"changeFilter('completed'); \">\r\n                </uib-tab>\r\n                <uib-tab index=\"2\" heading=\"Upcoming\" select=\"changeFilter('upcoming');\">\r\n                </uib-tab>\r\n            </uib-tabset>\r\n        </form>\r\n    </div>\r\n    <div class=\"list-group-spacing\">\r\n        <div class=\"list-group\">\r\n            <a href=\"#\" \r\n                ng-click=\"currentClass(class.sys_id, class.when); changeSelected(class.sys_id);\" \r\n                ng-class=\"class.selected ? 'list-group-item active' : 'list-group-item'\" \r\n                ng-repeat=\"class in c.data.classes | filter : {when : filterItems}\">\r\n                    <h4 class=\"list-group-item-heading\">{{class.name}}</h4>\r\n                    <p class=\"list-group-item-text\">{{class.short_desc}}</p>\r\n            </a>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>",
            "readonly": false,
            "hint": "",
            "name": "template",
            "attributes": {},
            "choice": 0,
            "value": "<div class=\"panel panel-default\">\r\n    <div class=\"panel-body\">\r\n        <form name=\"outerForm\" class=\"tab-form-demo\">\r\n            <uib-tabset active=\"activeForm\">\r\n                <uib-tab index=\"0\" heading=\"Active\" select=\"changeFilter('active');\">\r\n                </uib-tab>\r\n                <uib-tab index=\"1\" heading=\"Completed\" select=\"changeFilter('completed'); \">\r\n                </uib-tab>\r\n                <uib-tab index=\"2\" heading=\"Upcoming\" select=\"changeFilter('upcoming');\">\r\n                </uib-tab>\r\n            </uib-tabset>\r\n        </form>\r\n    </div>\r\n    <div class=\"list-group-spacing\">\r\n        <div class=\"list-group\">\r\n            <a href=\"#\" \r\n                ng-click=\"currentClass(class.sys_id, class.when); changeSelected(class.sys_id);\" \r\n                ng-class=\"class.selected ? 'list-group-item active' : 'list-group-item'\" \r\n                ng-repeat=\"class in c.data.classes | filter : {when : filterItems}\">\r\n                    <h4 class=\"list-group-item-heading\">{{class.name}}</h4>\r\n                    <p class=\"list-group-item-text\">{{class.short_desc}}</p>\r\n            </a>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>",
            "max_length": 65000,
            "ed": {
                "name": "template"
            }
        },
        "css": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "CSS",
            "sys_readonly": false,
            "type": "css",
            "mandatory": false,
            "displayValue": ".list-group-spacing {\r\n    margin: 1.3em;\r\n}\r\n\r\n.list-group-background {\r\n    background-color: $primary;\r\n    color: white;\r\n}\r\n",
            "readonly": false,
            "hint": "",
            "name": "css",
            "attributes": {},
            "choice": 0,
            "value": ".list-group-spacing {\r\n    margin: 1.3em;\r\n}\r\n\r\n.list-group-background {\r\n    background-color: $primary;\r\n    color: white;\r\n}\r\n",
            "max_length": 8000,
            "ed": {
                "name": "css"
            }
        },
        "roles": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": 12,
            "label": "Roles",
            "sys_readonly": false,
            "type": "user_roles",
            "mandatory": false,
            "displayValue": "",
            "readonly": false,
            "hint": "",
            "name": "roles",
            "attributes": {
                "no_truncate": "true",
                "update_exempt": "true",
                "record_watcher_blacklist": "true"
            },
            "choice": 0,
            "value": "",
            "max_length": 255,
            "ed": {
                "name": "roles"
            }
        },
        "link": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Link",
            "sys_readonly": false,
            "type": "script",
            "mandatory": false,
            "displayValue": "function link(scope, element, attrs, controller) {\r\n  \r\n}",
            "readonly": false,
            "hint": "",
            "name": "link",
            "attributes": {
                "client_script": "true"
            },
            "choice": 0,
            "value": "function link(scope, element, attrs, controller) {\r\n  \r\n}",
            "max_length": 65000,
            "ed": {
                "name": "link"
            }
        },
        "description": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Description",
            "sys_readonly": false,
            "type": "string",
            "mandatory": false,
            "displayValue": "",
            "readonly": false,
            "hint": "Defines what the widget does",
            "name": "description",
            "attributes": {
                "edge_encryption_enabled": "true"
            },
            "choice": 0,
            "value": "",
            "max_length": 300,
            "ed": {
                "name": "description"
            }
        },
        "demo_data": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Demo data",
            "sys_readonly": false,
            "type": "json",
            "mandatory": false,
            "displayValue": "",
            "readonly": false,
            "hint": "",
            "name": "demo_data",
            "attributes": {},
            "choice": 0,
            "value": "",
            "max_length": 8000,
            "ed": {
                "name": "demo_data"
            }
        },
        "option_schema": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Option schema",
            "sys_readonly": false,
            "type": "json",
            "mandatory": false,
            "displayValue": "",
            "readonly": false,
            "hint": "",
            "name": "option_schema",
            "attributes": {},
            "choice": 0,
            "value": "",
            "max_length": 8000,
            "ed": {
                "name": "option_schema"
            }
        },
        "script": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Server script",
            "sys_readonly": false,
            "type": "script",
            "mandatory": false,
            "displayValue": "(function() {\r\ndata.classes = [];\r\nconst userID = gs.getUserID();\r\n\r\nonLoad();\r\n\r\nfunction onLoad() {\r\n  let now = new GlideDate();\r\n  const userRole = new x_adsr_tap.userRoleUtility().privileges();\r\n\r\nif(userRole === \"trainer\") {\r\n  var classGR = new GlideRecordSecure(\"x_adsr_tap_class\");\r\n  classGR.addQuery(\"trainer\", userID);\r\n  classGR.query();\r\n  while(classGR.next()) {\r\n    let when;\r\n    if(now >= classGR.start && now <= classGR.end) {\r\n      when = \"active\";\r\n    }\r\n    else if(now < classGR.start) {\r\n      when = \"upcoming\";\r\n    }\r\n    else if(now > classGR.end) {\r\n      when = \"completed\";\r\n    }\r\n    var classOBJ = {\r\n      \"name\":classGR.name.getDisplayValue(),\r\n      \"progress\":classGR.progress.getDisplayValue(),\r\n      \"short_desc\":classGR.short_description.getDisplayValue(),\r\n      \"type\":classGR.type.getDisplayValue(),\r\n      \"level\":classGR.level.getDisplayValue(),\r\n      \"when\":when,\r\n      \"sys_id\":classGR.sys_id.getDisplayValue(),\r\n      \"selected\": false\r\n    }\r\n    data.classes.push(classOBJ);\r\n  }\r\n\r\n\r\n  }\r\n}\r\n\r\n})();",
            "readonly": false,
            "hint": "",
            "name": "script",
            "attributes": {},
            "choice": 0,
            "value": "(function() {\r\ndata.classes = [];\r\nconst userID = gs.getUserID();\r\n\r\nonLoad();\r\n\r\nfunction onLoad() {\r\n  let now = new GlideDate();\r\n  const userRole = new x_adsr_tap.userRoleUtility().privileges();\r\n\r\nif(userRole === \"trainer\") {\r\n  var classGR = new GlideRecordSecure(\"x_adsr_tap_class\");\r\n  classGR.addQuery(\"trainer\", userID);\r\n  classGR.query();\r\n  while(classGR.next()) {\r\n    let when;\r\n    if(now >= classGR.start && now <= classGR.end) {\r\n      when = \"active\";\r\n    }\r\n    else if(now < classGR.start) {\r\n      when = \"upcoming\";\r\n    }\r\n    else if(now > classGR.end) {\r\n      when = \"completed\";\r\n    }\r\n    var classOBJ = {\r\n      \"name\":classGR.name.getDisplayValue(),\r\n      \"progress\":classGR.progress.getDisplayValue(),\r\n      \"short_desc\":classGR.short_description.getDisplayValue(),\r\n      \"type\":classGR.type.getDisplayValue(),\r\n      \"level\":classGR.level.getDisplayValue(),\r\n      \"when\":when,\r\n      \"sys_id\":classGR.sys_id.getDisplayValue(),\r\n      \"selected\": false\r\n    }\r\n    data.classes.push(classOBJ);\r\n  }\r\n\r\n\r\n  }\r\n}\r\n\r\n})();",
            "max_length": 65000,
            "ed": {
                "name": "script"
            }
        },
        "has_preview": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -7,
            "label": "Has preview",
            "sys_readonly": false,
            "type": "boolean",
            "mandatory": false,
            "displayValue": "true",
            "readonly": false,
            "hint": "Defines whether preview data is available",
            "name": "has_preview",
            "attributes": {},
            "choice": 0,
            "value": "true",
            "max_length": 40,
            "ed": {
                "name": "has_preview"
            }
        },
        "public": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -7,
            "label": "Public",
            "sys_readonly": false,
            "type": "boolean",
            "mandatory": false,
            "displayValue": "false",
            "readonly": false,
            "hint": "Widget publicly available to unauthenticated users",
            "name": "public",
            "attributes": {
                "update_exempt": "true"
            },
            "choice": 0,
            "value": "false",
            "max_length": 40,
            "ed": {
                "name": "public"
            }
        },
        "docs": {
            "sys_mandatory": false,
            "visible": true,
            "table_attributes": {
                "update_synch": "true",
                "synch_attachments": "true"
            },
            "dbType": 12,
            "label": "Docs",
            "sys_readonly": false,
            "type": "reference",
            "mandatory": false,
            "refTable": "sp_documentation",
            "reference_type": "table",
            "displayValue": "",
            "readonly": false,
            "hint": "",
            "name": "docs",
            "attributes": {
                "encode_utf8": "false"
            },
            "reference_key": "sys_id",
            "readonlyClickthrough": false,
            "choice": 0,
            "value": "",
            "max_length": 32,
            "ed": {
                "reference": "sp_documentation",
                "searchField": "title",
                "defaultOperator": "STARTSWITH",
                "name": "docs"
            }
        },
        "client_script": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Client controller",
            "sys_readonly": false,
            "type": "script",
            "mandatory": false,
            "displayValue": "api.controller = function ($scope, $rootScope, spUtil, $timeout) {\r\n  /* widget controller */\r\n  var c = this;\r\n\r\n  $scope.filterItems = \"active\";\r\n\r\n  $scope.currentClass = function (id, when) {\r\n    $timeout(function () {\r\n        $rootScope.$broadcast('currentClass', {\r\n          sys_id: id,\r\n          when: when\r\n        });\r\n      },\r\n      1);\r\n  }\r\n\r\n  for (var i = 0; i < c.data.classes.length; i++) {\r\n\r\n    if (c.data.classes[i].when === \"active\") {\r\n\r\n      c.data.classes[i].selected = true;\r\n      $scope.currentClass(c.data.classes[i].sys_id, \"active\");\r\n    }\r\n\r\n    break;\r\n  }\r\n\r\n\r\n  $scope.changeSelected = function (id) {\r\n    for (var k = 0; k < c.data.classes.length; k++) {\r\n      c.data.classes[k].selected = false;\r\n    }\r\n\r\n    for (var j = 0; j < c.data.classes.length; j++) {\r\n      if (c.data.classes[j].sys_id == id) {\r\n        c.data.classes[j].selected = true;\r\n        //console.log(c.data.classes);\r\n        break;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  $scope.changeFilter = function (filter) {\r\n    $scope.filterItems = filter;\r\n  }\r\n  //console.log($scope.filterItems);\r\n};",
            "readonly": false,
            "hint": "",
            "name": "client_script",
            "attributes": {
                "client_script": "true"
            },
            "choice": 0,
            "value": "api.controller = function ($scope, $rootScope, spUtil, $timeout) {\r\n  /* widget controller */\r\n  var c = this;\r\n\r\n  $scope.filterItems = \"active\";\r\n\r\n  $scope.currentClass = function (id, when) {\r\n    $timeout(function () {\r\n        $rootScope.$broadcast('currentClass', {\r\n          sys_id: id,\r\n          when: when\r\n        });\r\n      },\r\n      1);\r\n  }\r\n\r\n  for (var i = 0; i < c.data.classes.length; i++) {\r\n\r\n    if (c.data.classes[i].when === \"active\") {\r\n\r\n      c.data.classes[i].selected = true;\r\n      $scope.currentClass(c.data.classes[i].sys_id, \"active\");\r\n    }\r\n\r\n    break;\r\n  }\r\n\r\n\r\n  $scope.changeSelected = function (id) {\r\n    for (var k = 0; k < c.data.classes.length; k++) {\r\n      c.data.classes[k].selected = false;\r\n    }\r\n\r\n    for (var j = 0; j < c.data.classes.length; j++) {\r\n      if (c.data.classes[j].sys_id == id) {\r\n        c.data.classes[j].selected = true;\r\n        //console.log(c.data.classes);\r\n        break;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  $scope.changeFilter = function (filter) {\r\n    $scope.filterItems = filter;\r\n  }\r\n  //console.log($scope.filterItems);\r\n};",
            "max_length": 8000,
            "ed": {
                "name": "client_script"
            }
        },
        "data_table": {
            "sys_mandatory": true,
            "visible": true,
            "dbType": 12,
            "default_value": "sp_instance",
            "label": "Data table",
            "sys_readonly": false,
            "type": "table_name",
            "mandatory": true,
            "displayValue": "sp_instance",
            "readonly": false,
            "hint": "",
            "name": "data_table",
            "attributes": {
                "base_table": "sp_instance",
                "base_start": "true"
            },
            "choice": 0,
            "choices": [],
            "value": "sp_instance",
            "max_length": 80,
            "ed": {
                "name": "data_table"
            }
        },
        "name": {
            "sys_mandatory": true,
            "visible": true,
            "dbType": 12,
            "label": "Name",
            "sys_readonly": false,
            "type": "translated_field",
            "mandatory": true,
            "displayValue": "TAP Class List",
            "readonly": false,
            "hint": "",
            "name": "name",
            "attributes": {},
            "choice": 0,
            "value": "TAP Class List",
            "max_length": 40,
            "ed": {
                "name": "name"
            }
        },
        "sys_scope": {
            "sys_mandatory": false,
            "visible": true,
            "table_attributes": {
                "metadata_link_exempt": "true"
            },
            "dbType": 12,
            "label": "Application",
            "sys_readonly": true,
            "type": "reference",
            "mandatory": false,
            "refTable": "sys_app",
            "reference_type": "table",
            "displayValue": "Train-A-Pro",
            "readonly": true,
            "hint": "Application containing this record",
            "name": "sys_scope",
            "attributes": {
                "list_force_default": "true",
                "readonly_clickthrough": "true",
                "ignore_filter_on_new": "true"
            },
            "reference_key": "sys_id",
            "readonlyClickthrough": true,
            "choice": 0,
            "value": "96b6f27bdb9561107758240a1396190c",
            "max_length": 32,
            "ed": {
                "reference": "sys_scope",
                "searchField": "name",
                "defaultOperator": "STARTSWITH",
                "name": "sys_scope"
            }
        },
        "id": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": 12,
            "label": "ID",
            "sys_readonly": false,
            "type": "string",
            "mandatory": false,
            "displayValue": "tap_class_list",
            "readonly": false,
            "hint": "Identifier for $sp.embedWidget()",
            "name": "id",
            "attributes": {
                "edge_encryption_enabled": "true"
            },
            "choice": 0,
            "value": "tap_class_list",
            "max_length": 40,
            "ed": {
                "name": "id"
            }
        },
        "field_list": {
            "sys_mandatory": false,
            "visible": true,
            "dependentField": "data_table",
            "dbType": -1,
            "label": "Fields",
            "sys_readonly": false,
            "type": "field_list",
            "mandatory": false,
            "displayValue": "",
            "readonly": false,
            "hint": "",
            "name": "field_list",
            "attributes": {
                "is_multi_text": "false"
            },
            "choice": 0,
            "value": "",
            "max_length": 1000,
            "ed": {
                "dependent_value": "sp_instance",
                "name": "field_list"
            }
        },
        "controller_as": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": 12,
            "label": "controllerAs",
            "sys_readonly": false,
            "type": "string",
            "mandatory": false,
            "displayValue": "c",
            "readonly": false,
            "hint": "Identifier name for a reference to the controller in the directive's scope",
            "name": "controller_as",
            "attributes": {
                "edge_encryption_enabled": "true"
            },
            "choice": 0,
            "value": "c",
            "max_length": 100,
            "ed": {
                "name": "controller_as"
            }
        }
    }
}